"use strict"; var __spreadArrays = this && this.__spreadArrays || function () { for (var t = 0, e = 0, i = arguments.length; e < i; e++)t += arguments[e].length; var n = Array(t), s = 0; for (e = 0; e < i; e++)for (var a = arguments[e], o = 0, p = a.length; o < p; o++, s++)n[s] = a[o]; return n }, Pagination = function () { function t(t) { this.options = { element: "", type: 1, pageIndex: 1, pageSize: 0, pageCount: 9, total: 0, prevText: "", nextText: "", jumper: !1, singlePageHide: !0, disabled: !1, currentChange: function (t) { } }, this.element = null, this.lis = [], this.home = null, this.last = null, this.prev = null, this.next = null, this.input = null, this.pageNum = 0, this.validate(t) && this.init(t) } return t.prototype.init = function (t) { this.setOptions(t), this.render() }, t.prototype.render = function () { var t, e, i, n = this, s = this; if (this.pageNum = Math.ceil(this.options.total / this.options.pageSize), this.element.innerHTML = "", 1 !== this.pageNum || !this.options.singlePageHide) { this.options.pageIndex > this.pageNum && (this.options.pageIndex = this.pageNum), this.options.pageIndex <= 0 && (this.options.pageIndex = 1); var a = this.createElement("div", "_page_container"), o = this.createElement("ul", ["_pages", "_pages_" + this.options.type]), p = this.options.pageIndex <= 1 ? ["_disabled_c"] : []; this.options.pageIndex <= 1 && this.options.disabled && p.push("_disabled"), this.options.type <= 1 && (this.home = this.createElement("li", __spreadArrays(["_home"], p)), this.home.innerText = "Trang đầu", this.home.addEventListener("click", (function () { n.options.pageIndex > 1 && n.handleChangePage(1) })), o.appendChild(this.home)), this.prev = this.createElement("li", __spreadArrays(["_prev_"], p, this.options.prevText ? ["_prev"] : ["_iconfont", "iconzuo"])), this.prev.innerText = this.options.prevText || "", this.prev.addEventListener("click", (function () { n.options.pageIndex - 1 > 0 && n.handleChangePage(n.options.pageIndex - 1) })), o.appendChild(this.prev); for (var r = this.getBetween(), h = 1; h <= this.pageNum; h++)h >= r.min && h <= r.max && (i = h === this.options.pageIndex ? ["_active_" + this.options.type] : [], h === this.options.pageIndex && this.options.disabled && i.push("_disabled"), (e = this.createElement("li", __spreadArrays(["_pages_li_" + this.options.type], i))).innerText = h.toString(), e.setAttribute("data-index", h.toString()), e.addEventListener("click", (function () { this.dataset.index != s.options.pageIndex && s.handleChangePage(Number(this.dataset.index)) })), null === (t = this.lis) || void 0 === t || t.push(e), o.appendChild(e)); var d = this.options.pageIndex >= this.pageNum ? ["_disabled_c"] : []; if (this.options.pageIndex >= this.pageNum && this.options.disabled && d.push("_disabled"), this.next = this.createElement("li", __spreadArrays(["_next_"], d, this.options.nextText ? ["_next"] : ["_iconfont", "iconGroup-"])), this.next.innerText = this.options.nextText || "", this.next.addEventListener("click", (function () { n.options.pageIndex < n.pageNum && n.handleChangePage(n.options.pageIndex + 1) })), o.appendChild(this.next), this.options.type <= 1 && (this.last = this.createElement("li", __spreadArrays(["_last"], d)), this.last.innerText = "Trang Cuối", this.last.addEventListener("click", (function () { n.options.pageIndex < n.pageNum && n.handleChangePage(n.pageNum) })), o.appendChild(this.last)), a.appendChild(o), this.options.jumper) { var l = this.createElement("div", "_jumper"), u = this.createElement("span", "_count"); u.innerText = "Tổng " + this.pageNum + " trang", l.appendChild(u); var g = this.createElement("span"); g.innerText = "Đi tới", l.appendChild(g); var c = 0; this.input = this.createElement("input", "_jumper_input"), this.input.type = "number", this.input.value = this.options.pageIndex.toString(), this.input.setAttribute("min", "1"), this.input.setAttribute("max", this.pageNum.toString());["blur", "keydown"].forEach((function (t) { n.input.addEventListener(t, (function (t) { "keydown" === t.type && 13 !== t.keyCode || ((c = ~~this.value) < 1 && (c = 1), c > s.pageNum && (c = s.pageNum), this.value = c, c !== s.options.pageIndex && s.handleChangePage(c)) })) })), l.appendChild(this.input); var m = this.createElement("span"); m.innerText = "trang", l.appendChild(m), a.appendChild(l) } this.element.appendChild(a) } }, t.prototype.handleChangePage = function (t) { var e, i = this; this.options.pageIndex = t;["home", "last", "prev", "next"].forEach((function (n) { "home" !== n && "prev" !== n || (e = t <= 1 ? "add" : "remove"), "last" !== n && "next" !== n || (e = t >= i.pageNum ? "add" : "remove"), i[n] && (i[n].classList[e]("_disabled_c"), i.options.disabled && i[n].classList[e]("_disabled")) })); for (var n = this.getBetween(), s = this.generateArray(n.min, n.max), a = 0; a < this.lis.length; a++)e = s[a] === t ? "add" : "remove", this.lis[a].classList[e]("_active_" + this.options.type), this.lis[a].setAttribute("data-index", s[a]), this.lis[a].innerText = s[a].toString(), this.options.disabled && this.lis[a].classList[e]("_disabled"); this.options.jumper && (this.input.value = t), "function" == typeof this.options.currentChange && this.options.currentChange(t) }, t.prototype.getBetween = function () { var t = this.options.pageIndex - Math.floor(this.options.pageCount / 2); t > this.pageNum - this.options.pageCount && (t = this.pageNum - this.options.pageCount + 1), t <= 1 && (t = 1); var e = this.options.pageIndex + Math.floor(this.options.pageCount / 2); return e < this.options.pageCount && (e = this.options.pageCount), e > this.pageNum && (e = this.pageNum), { min: t, max: e } }, t.prototype.generateArray = function (t, e) { for (var i = [], n = t; n <= e; n++)i.push(n); return i }, t.prototype.createElement = function (t, e) { var i = document.createElement(t); return e && (e instanceof Array ? e.forEach((function (t) { i.classList.add(t) })) : i.classList.add(e)), i }, t.prototype.validate = function (t) { if (!t) throw new Error("options of null"); if ("object" != typeof t) throw new Error("options not an object"); if (!document.querySelector(t.element)) throw new Error("element of null"); return ["type", "pageIndex", "pageSize", "pageCount", "total"].forEach((function (e) { if (t[e]) { if (isNaN(t[e])) throw new Error(e + " not an number"); if ("pageCount" === e && t[e] % 2 == 0) throw new Error(e + " not an odd number") } })), !0 }, t.prototype.setOptions = function (t) { for (var e in this.element = document.querySelector(t.element), t) void 0 !== t[e] && (this.options[e] = isNaN(t[e]) ? t[e] : +t[e]) }, t }();